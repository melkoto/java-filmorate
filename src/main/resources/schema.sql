DROP ALL OBJECTS DELETE FILES;

CREATE TABLE IF NOT EXISTS genres
(
    id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR CHECK (name <> '') NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS mpas
(
    id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR CHECK (name <> '') NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films
(
    id           LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR CHECK (name <> '') NOT NULL,
    description  VARCHAR(200),
    release_date DATE,
    duration     LONG CHECK (duration > 0),
    genre_id     INT                        REFERENCES genres (id) ON DELETE SET NULL,
    mpa_id       INT                        REFERENCES mpas (id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS users
(
    id       LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login    VARCHAR CHECK (login <> '') NOT NULL UNIQUE,
    name     VARCHAR,
    email    VARCHAR                     NOT NULL UNIQUE,
    birthday DATE
);

CREATE TABLE IF NOT EXISTS likes
(
    user_id LONG REFERENCES users (id) ON DELETE CASCADE,
    film_id LONG REFERENCES films (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS friends
(
    from_user LONG REFERENCES users (id) ON DELETE CASCADE,
    to_user   LONG REFERENCES users (id) ON DELETE CASCADE,
    status    VARCHAR DEFAULT 'pending',
    PRIMARY KEY (from_user, to_user)
);

CREATE TABLE IF NOT EXISTS films_genres
(
    film_id  LONG REFERENCES films (id) ON DELETE CASCADE,
    genre_id LONG REFERENCES genres (id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
);
